#!/bin/bash
# ////////////////////////////////////////////////////////////////////////////////
# //BOCA Online Contest Administrator
# //    Copyright (C) 2003-2014 by BOCA System (bocasystem@gmail.com)
# //
# //    This program is free software: you can redistribute it and/or modify
# //    it under the terms of the GNU General Public License as published by
# //    the Free Software Foundation, either version 3 of the License, or
# //    (at your option) any later version.
# //
# //    This program is distributed in the hope that it will be useful,
# //    but WITHOUT ANY WARRANTY; without even the implied warranty of
# //    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# //    GNU General Public License for more details.
# //    You should have received a copy of the GNU General Public License
# //    along with this program.  If not, see <http://www.gnu.org/licenses/>.
# ////////////////////////////////////////////////////////////////////////////////
#Last modified: 21/august/2014 by cassio@ime.usp.br
#
# parameters are:
# $1 source_file
# $2 exe_file (default run.exe)
# $3 timelimit
# $4 maximum allowed memory (in MBytes, default 512M)
#
# the output of the submission should be directed to the standard output
#
# the return code show what happened (according to safeexec):
# 0 ok
# 1 compile error
# 2 runtime error
# 3 timelimit exceeded
# 4 internal error
# 5 parameter error
# 6 internal error
# 7 memory limit exceeded
# 8 security threat
# 9 runtime error
# other_codes are unknown to boca: in this case BOCA will present the
#                                  last line of standard output to the judge

umask 0022

if [ "$1" == "" ]; then
    echo "parameter problem"
    exit 43
fi
if [ ! -r "$1" ]; then
    echo "$1 not found or it's not readable"
    exit 44
fi
name="$1"
if [ ! -r "$1" ]; then
    echo "$1 not found or it's not readable"
    exit 44
fi

mkdir -p src
if [ "${name##*.}" == "zip" -a "${name##*.}" == "ZIP" ]; then
  unzip "$name" -d src
  name="*.sql"
else
  cp "$name" src
fi

id -u bocajail >/dev/null 2>/dev/null
if [ $? == 0 ]; then
  bocau=`id -u bocajail`
  bocag=`id -g bocajail`
  chown bocajail.nogroup .
else
  bocau=`id -u nobody`
  bocag=`id -g nobody`
  chown nobody.nogroup .
fi
if [ "$bocau" == "" -o "$bocag" == "" ]; then
  echo "error finding user to run script"
  exit 43
fi

# this script makes use of safeexec to execute the code with less privilegies
# make sure that directories below are correct.
sf=`which safeexec`
[ -x "$sf" ] || sf=/usr/bin/safeexec
if [ ! -x $sf ]; then
    echo "$sf not found or it's not executable"
    exit 46
fi
maxm=512000
if [ "$4" != "" ]; then
  if [ "$4" -gt "0" ]; then
    maxm=${4}000
  fi
fi

# setting up the timelimit according to the problem
if [ "$3" == "" ]; then
time=5
else
time=$3
fi
let "ttime = $time + 30"

if [ "$2" == "" ]; then
  exe=run.exe
else
  exe=$2
fi

rm -f "$exe" compileit.retcode runit.retcode 2>/dev/null
rm -f compileit.retcode runit.retcode 2>/dev/null

############################################################
# Last modified: 21/november/2019 by rlaiola@inf.ufes.br

echo "##################"
echo "CHECKING SYNTAX..."
echo "##################"

dbclient=`which mysql`
[ -x "$dbclient" ] || dbclient=/usr/bin/mysql
if [ ! -x "$dbclient" ]; then
    echo "$dbclient not found or it's not executable"
    exit 47
fi

echo "Create temporary folder..."
mkdir zip_src
echo "Unzip problem package files inside..."
unzip *.zip -d zip_src

echo "Read database credentials..."
# https://askubuntu.com/questions/367136/how-do-i-read-a-variable-from-a-file
source zip_src/db/db.conf
#echo zip_src/db/db.conf

echo "Query syntax is correct!"
ret=0

if [ -f "stdout0" ]; then
  cat "stdout0"
fi
if [ -f "stderr0" ]; then
  cat "stderr0"
fi
rm -rf src/
if [ "$ret" != "0" ]; then
  echo "Compilation Error: $ret"
  exit $ret
fi
if [ "$ret" != "0" ]; then
  echo "Compilation Error: $ret"
  ret=1
fi

exit $ret

############################################################
